name: dockercompose1656737545597528634
services:
  chatappbackend:
    build:
      context: E:\Software Development Project\ChatApp\ChatApp-BackEnd
      dockerfile: ChatAppBackEnd/Dockerfile
    container_name: chat-app-be
    depends_on:
      chatappdb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTPS_PORT: "443"
      ASPNETCORE_Kestrel__Certificates__Default__Password: ducphuong198
      ASPNETCORE_Kestrel__Certificates__Default__Path: /https/midouz.online.pfx
      ASPNETCORE_URLS: https://+:443;http://+:80
      DB_HOST: chatappdb
      DB_NAME: ChatApp
      DB_SA_PASSWORD: DB@Password
    extra_hosts:
      host.docker.internal: host-gateway
    image: midouz/chatappbackend
    networks:
      chatapp: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 80
      published: "8081"
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    - mode: ingress
      target: 443
      published: "8080"
      protocol: tcp
    stdin_open: true
    tty: true
    user: root
    volumes:
    - type: bind
      source: C:\Users\dphuo\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\dphuo\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  chatappdb:
    container_name: chat-app-db
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: DB@Password
    image: mcr.microsoft.com/mssql/server:2019-latest
    networks:
      chatapp: null
    ports:
    - mode: ingress
      target: 1433
      published: "1433"
      protocol: tcp
networks:
  chatapp:
    name: dockercompose1656737545597528634_chatapp